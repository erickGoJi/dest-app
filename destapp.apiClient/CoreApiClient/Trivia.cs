using destapp.apiClient.Models.Trivia;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace destapp.apiClient.CoreApiClient
{
    public class Trivia : ApiClient
    {
        public Trivia()
        {

        }

        public async Task<TriviaResponse> getAllTrivias()
        {
            clearHeaders();
            // AuthenticationResponse authenticationResponse = await Authenticate();
            //Uri uri = CreateRequestUri("_/items/trivias_page", "fields=featured_trivia.featured_trivia_id.id,featured_trivia.featured_trivia_id.name,featured_trivia.featured_trivia_id.description,featured_trivia.featured_trivia_id.image.data.*,featured_trivia.featured_trivia_id.access_type.*,featured_trivia.featured_trivia_id.access_codes.code_id.*.*,featured_trivia.featured_trivia_id.instructions_prize.data.*,featured_trivia.featured_trivia_id.logo.data.*,featured_trivia.featured_trivia_id.inactive_image.data.*,featured_trivia.featured_trivia_id.prize_per_user,featured_trivia.featured_trivia_id.questions.question_id.*.*.*,featured_trivia.featured_trivia_id.times_per_user,featured_trivia.featured_trivia_id.prize.prize_id.*.*,featured_trivia.featured_trivia_id.winner_message,featured_trivia.featured_trivia_id.you_win_message,featured_trivia.featured_trivia_id.retry_message,featured_trivia.featured_trivia_id.amount,featured_trivia.featured_trivia_id.start_date,featured_trivia.featured_trivia_id.end_date,featured_trivia.featured_trivia_id.terms_and_conditions,featured_trivia.featured_trivia_id.description_inactive,featured_trivia.featured_trivia_id.start_inactive_time,featured_trivia.featured_trivia_id.end_inactive_time,featured_trivia.featured_trivia_id.inactive_days,featured_trivia.featured_trivia_id.instructions,featured_trivia.featured_trivia_id.so.*,featured_trivia.featured_trivia_id.gender.*,featured_trivia.featured_trivia_id.age_range.*,featured_trivia.featured_trivia_id.states.*,featured_trivia.featured_trivia_id.interests.*,featured_trivia.featured_trivia_id.access_coins,featured_trivia.featured_trivia_id.notification.notification_id.*,featured_trivia.featured_trivia_id.featured_image_web.data.*,featured_trivia.featured_trivia_id.featured_image.data.*,featured_trivia.featured_trivia_id.logo.data.*,featured_trivia.featured_trivia_id.prize_type,trivia.trivia_id.id,trivia.trivia_id.name,trivia.trivia_id.description,trivia.trivia_id.image.data.*,trivia.trivia_id.access_type.*,trivia.trivia_id.access_codes.code_id.*.*,trivia.trivia_id.instructions_prize.data.*,trivia.trivia_id.logo.data.*,trivia.trivia_id.inactive_image.data.*,trivia.trivia_id.prize_per_user,trivia.trivia_id.questions.question_id.*.*.*,trivia.trivia_id.times_per_user,trivia.trivia_id.prize.prize_id.*.*,trivia.trivia_id.winner_message,trivia.trivia_id.you_win_message,trivia.trivia_id.retry_message,trivia.trivia_id.amount,trivia.trivia_id.start_date,trivia.trivia_id.end_date,trivia.trivia_id.terms_and_conditions,trivia.trivia_id.description_inactive,trivia.trivia_id.start_inactive_time,trivia.trivia_id.end_inactive_time,trivia.trivia_id.inactive_days,trivia.trivia_id.instructions,trivia.trivia_id.so.*,trivia.trivia_id.gender.*,trivia.trivia_id.age_range.*,trivia.trivia_id.states.*,trivia.trivia_id.interests.*,trivia.trivia_id.access_coins,trivia.trivia_id.notification.notification_id.*,trivia.trivia_id.logo.data.*,trivia.trivia_id.prize_type");
            Uri uri = CreateRequestUri("_/items/trivias_page", "fields=featured_trivia.featured_trivia_id.id,featured_trivia.featured_trivia_id.name,featured_trivia.featured_trivia_id.description,featured_trivia.featured_trivia_id.image.data.*,featured_trivia.featured_trivia_id.access_type.*,featured_trivia.featured_trivia_id.access_codes.code_id.*.*,featured_trivia.featured_trivia_id.instructions_prize.data.*,featured_trivia.featured_trivia_id.logo.data.*,featured_trivia.featured_trivia_id.inactive_image.data.*,featured_trivia.featured_trivia_id.prize_per_user,featured_trivia.featured_trivia_id.questions.question_id.*.*.*,featured_trivia.featured_trivia_id.times_per_user,featured_trivia.featured_trivia_id.prize.prize_id.*.*,featured_trivia.featured_trivia_id.winner_message,featured_trivia.featured_trivia_id.you_win_message,featured_trivia.featured_trivia_id.retry_message,featured_trivia.featured_trivia_id.amount,featured_trivia.featured_trivia_id.start_date,featured_trivia.featured_trivia_id.end_date,featured_trivia.featured_trivia_id.terms_and_conditions,featured_trivia.featured_trivia_id.description_inactive,featured_trivia.featured_trivia_id.start_inactive_time,featured_trivia.featured_trivia_id.end_inactive_time,featured_trivia.featured_trivia_id.inactive_days,featured_trivia.featured_trivia_id.instructions,featured_trivia.featured_trivia_id.so.*,featured_trivia.featured_trivia_id.gender.*,featured_trivia.featured_trivia_id.age_range.*,featured_trivia.featured_trivia_id.states.*,featured_trivia.featured_trivia_id.interests.*,featured_trivia.featured_trivia_id.access_coins,featured_trivia.featured_trivia_id.notification.notification_id.*,featured_trivia.featured_trivia_id.featured_image_web.data.*,featured_trivia.featured_trivia_id.featured_image.data.*,featured_trivia.featured_trivia_id.logo.data.*,featured_trivia.featured_trivia_id.prize_type,featured_trivia.featured_trivia_id.prize_per_day,trivia.trivia_id.id,trivia.trivia_id.name,trivia.trivia_id.description,trivia.trivia_id.image.data.*,trivia.trivia_id.access_type.*,trivia.trivia_id.access_codes.code_id.*.*,trivia.trivia_id.instructions_prize.data.*,trivia.trivia_id.logo.data.*,trivia.trivia_id.inactive_image.data.*,trivia.trivia_id.prize_per_user,trivia.trivia_id.questions.question_id.*.*.*,trivia.trivia_id.times_per_user,trivia.trivia_id.prize.prize_id.*.*,trivia.trivia_id.winner_message,trivia.trivia_id.you_win_message,trivia.trivia_id.retry_message,trivia.trivia_id.amount,trivia.trivia_id.start_date,trivia.trivia_id.end_date,trivia.trivia_id.terms_and_conditions,trivia.trivia_id.description_inactive,trivia.trivia_id.start_inactive_time,trivia.trivia_id.end_inactive_time,trivia.trivia_id.inactive_days,trivia.trivia_id.instructions,trivia.trivia_id.so.*,trivia.trivia_id.gender.*,trivia.trivia_id.age_range.*,trivia.trivia_id.states.*,trivia.trivia_id.interests.*,trivia.trivia_id.access_coins,trivia.trivia_id.notification.notification_id.*,trivia.trivia_id.logo.data.*,trivia.trivia_id.prize_type,trivia.trivia_id.prize_per_day");
            setAuthorizationToken(Constants.TOKEN_CMS);
            return await GetAsync<TriviaResponse>(uri);
        }

        public async Task<TriviaIdResponse> getAllTrivias_byid(string id)
        {
            clearHeaders();
            // AuthenticationResponse authenticationResponse = await Authenticate();
            Uri uri = CreateRequestUri("_/items/trivia/"+ id, "fields= id,name,description,image.data.*,access_type.*,access_codes.code_id.*.*,instructions_prize.data.*,logo.data.*,inactive_image.data.*,prize_per_user,questions.question_id.*.*.*,times_per_user,prize.prize_id.*.*,winner_message,you_win_message,retry_message,amount,start_date,end_date,terms_and_conditions,description_inactive,start_inactive_time,end_inactive_time,inactive_days,instructions,so.*,gender.*,age_range.*,states.*,interests.*,access_coins,notification.notification_id.*,logo.data.*,prize_type");
            setAuthorizationToken(Constants.TOKEN_CMS);
            return await GetAsync<TriviaIdResponse>(uri);
        }
    }
}
